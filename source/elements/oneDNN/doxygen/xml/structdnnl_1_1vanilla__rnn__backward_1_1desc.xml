<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structdnnl_1_1vanilla__rnn__backward_1_1desc" kind="struct" language="C++" prot="public">
    <compoundname>dnnl::vanilla_rnn_backward::desc</compoundname>
    <includes refid="dnnl_8hpp" local="no">dnnl.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdnnl_1_1vanilla__rnn__backward_1_1desc_1a9a017a58e0ccb5f1725235c518094162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dnnl::vanilla_rnn_backward::desc::desc</definition>
        <argsstring>(prop_kind prop_kind, algorithm activation, rnn_direction direction, const memory::desc &amp;src_layer_desc, const memory::desc &amp;src_iter_desc, const memory::desc &amp;weights_layer_desc, const memory::desc &amp;weights_iter_desc, const memory::desc &amp;bias_desc, const memory::desc &amp;dst_layer_desc, const memory::desc &amp;dst_iter_desc, const memory::desc &amp;diff_src_layer_desc, const memory::desc &amp;diff_src_iter_desc, const memory::desc &amp;diff_weights_layer_desc, const memory::desc &amp;diff_weights_iter_desc, const memory::desc &amp;diff_bias_desc, const memory::desc &amp;diff_dst_layer_desc, const memory::desc &amp;diff_dst_iter_desc, rnn_flags flags=rnn_flags::undef, float alpha=0.0f, float beta=0.0f)</argsstring>
        <name>desc</name>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f" kindref="member">prop_kind</ref></type>
          <declname>prop_kind</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640" kindref="member">algorithm</ref></type>
          <declname>activation</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__rnn_1ga33315cf335d1cbe26fd6b70d956e23d5" kindref="member">rnn_direction</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>src_layer_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>src_iter_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>weights_layer_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>weights_iter_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>bias_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>dst_layer_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>dst_iter_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>diff_src_layer_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>diff_src_iter_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>diff_weights_layer_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>diff_weights_iter_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>diff_bias_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>diff_dst_layer_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>diff_dst_iter_desc</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__rnn_1gad27d0db2a86ae3072207769f5c2ddd1e" kindref="member">rnn_flags</ref></type>
          <declname>flags</declname>
          <defval><ref refid="group__dnnl__api__rnn_1ggad27d0db2a86ae3072207769f5c2ddd1eaf31ee5e3824f1f5e5d206bdf3029f22b" kindref="member">rnn_flags::undef</ref></defval>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>beta</declname>
          <defval>0.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a descriptor for a vanilla RNN backward propagation primitive.</para>
<para>The <computeroutput>src_iter_desc</computeroutput> together with <computeroutput>diff_src_iter_desc</computeroutput>, <computeroutput>bias_desc</computeroutput> together with <computeroutput>diff_bias_desc</computeroutput>, and <computeroutput>dst_iter_desc</computeroutput> together with <computeroutput>diff_src_iter_desc</computeroutput>, may point to a zero memory descriptor. This would then indicate that the RNN backward propagation primitive should not use the respective data and should use zero values instead.</para>
<para>Inputs:<itemizedlist>
<listitem><para><computeroutput>src_layer</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1af42e791f493e636c086e13c6d4c06b43" kindref="member">dnnl::primitive_desc_base::src_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>src_iter</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1af42e791f493e636c086e13c6d4c06b43" kindref="member">dnnl::primitive_desc_base::src_desc</ref> (<computeroutput>1</computeroutput>)), if used</para>
</listitem><listitem><para><computeroutput>weights_layer</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>weights_iter</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>1</computeroutput>))</para>
</listitem><listitem><para><computeroutput>bias</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>2</computeroutput>)), if used</para>
</listitem><listitem><para><computeroutput>dst_layer</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1a495ee7c8e1ec3eab35f6329fdcd352bb" kindref="member">dnnl::primitive_desc_base::dst_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>dst_iter</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1a495ee7c8e1ec3eab35f6329fdcd352bb" kindref="member">dnnl::primitive_desc_base::dst_desc</ref> (<computeroutput>1</computeroutput>)), if used</para>
</listitem><listitem><para><computeroutput>diff_dst_layer</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1a60f17d04c493c42e4a50ad5feff5c8ca" kindref="member">dnnl::primitive_desc_base::diff_dst_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para>diff_dst_iter (<ref refid="structdnnl_1_1primitive__desc__base_1a60f17d04c493c42e4a50ad5feff5c8ca" kindref="member">dnnl::primitive_desc_base::diff_dst_desc</ref> (<computeroutput>1</computeroutput>)), if used</para>
</listitem><listitem><para><computeroutput>workspace</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1ad26f416a149cb44cc5cfc130012c614e" kindref="member">dnnl::primitive_desc_base::workspace_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para>Outputs:<itemizedlist>
<listitem><para>diff_src_layer (<ref refid="structdnnl_1_1primitive__desc__base_1a733e6ff4e78a758e69ae6232e8955871" kindref="member">dnnl::primitive_desc_base::diff_src_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para>diff_src_iter (<ref refid="structdnnl_1_1primitive__desc__base_1a733e6ff4e78a758e69ae6232e8955871" kindref="member">dnnl::primitive_desc_base::diff_src_desc</ref> (<computeroutput>1</computeroutput>)), if used</para>
</listitem><listitem><para>diff_weights_layer (<ref refid="structdnnl_1_1primitive__desc__base_1a192f7b334efac9a5ac20344a76d4d552" kindref="member">dnnl::primitive_desc_base::diff_weights_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para>diff_weights_iter (<ref refid="structdnnl_1_1primitive__desc__base_1a192f7b334efac9a5ac20344a76d4d552" kindref="member">dnnl::primitive_desc_base::diff_weights_desc</ref> (<computeroutput>1</computeroutput>))</para>
</listitem><listitem><para>diff_bias (<ref refid="structdnnl_1_1primitive__desc__base_1a192f7b334efac9a5ac20344a76d4d552" kindref="member">dnnl::primitive_desc_base::diff_weights_desc</ref> (<computeroutput>2</computeroutput>)), if used</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>All memory descriptors are allowed to be initialized with <ref refid="structdnnl_1_1memory_1a8e71077ed6a5f7fb7b3e6e1a5a2ecf3fa100b8cad7cf2a56f6df78f171f97a1ec" kindref="member">dnnl::memory::format_tag::any</ref> value of <computeroutput>format_tag</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prop_kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Propagation kind. Must be <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa195fe59b6f103787a914aead0f3db502" kindref="member">dnnl::prop_kind::backward</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>activation</parametername>
</parameternamelist>
<parameterdescription>
<para>Activation kind. Possible values are <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aba09bebb742494255b90b43871c01c69" kindref="member">dnnl::algorithm::eltwise_relu</ref>, <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a38dd7159307eab45742c78e72f06abb0" kindref="member">dnnl::algorithm::eltwise_tanh</ref>, or <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a282836cce833348ee509b0ecd764d217" kindref="member">dnnl::algorithm::eltwise_logistic</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>RNN direction. See <ref refid="group__dnnl__api__rnn_1ga33315cf335d1cbe26fd6b70d956e23d5" kindref="member">dnnl::rnn_direction</ref> for more info. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_layer_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_iter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the input recurrent hidden state vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights_layer_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the weights applied to the layer input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights_iter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the weights applied to the recurrent input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_layer_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_iter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the output recurrent hidden state vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diff_src_layer_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the diff of input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diff_src_iter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the diff of input recurrent hidden state vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diff_weights_layer_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the diff of weights applied to the layer input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diff_weights_iter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the diff of weights applied to the recurrent input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diff_bias_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Diff bias memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diff_dst_layer_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the diff of output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>diff_dst_iter_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory descriptor for the diff of output recurrent hidden state vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Unused. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Negative slope if activation is <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aba09bebb742494255b90b43871c01c69" kindref="member">dnnl::algorithm::eltwise_relu</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>Unused. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="5137" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Vanilla RNN descriptor backward propagation primitive. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dnnl.hpp" line="5061" column="15" bodyfile="include/dnnl.hpp" bodystart="5061" bodyend="5154"/>
    <listofallmembers>
      <member refid="structdnnl_1_1vanilla__rnn__backward_1_1desc_1a9a017a58e0ccb5f1725235c518094162" prot="public" virt="non-virtual"><scope>dnnl::vanilla_rnn_backward::desc</scope><name>desc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
