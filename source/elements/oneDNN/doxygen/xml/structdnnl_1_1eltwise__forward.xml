<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structdnnl_1_1eltwise__forward" kind="struct" language="C++" prot="public">
    <compoundname>dnnl::eltwise_forward</compoundname>
    <basecompoundref refid="structdnnl_1_1primitive" prot="public" virt="non-virtual">dnnl::primitive</basecompoundref>
    <includes refid="dnnl_8hpp" local="no">dnnl.hpp</includes>
    <innerclass refid="structdnnl_1_1eltwise__forward_1_1desc" prot="public">dnnl::eltwise_forward::desc</innerclass>
    <innerclass refid="structdnnl_1_1eltwise__forward_1_1primitive__desc" prot="public">dnnl::eltwise_forward::primitive_desc</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdnnl_1_1eltwise__forward_1ad93382cd4609f37a2de94de9c327b263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dnnl::eltwise_forward::eltwise_forward</definition>
        <argsstring>()</argsstring>
        <name>eltwise_forward</name>
        <briefdescription>
<para>Default constructor. Produces an empty object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="3518" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structdnnl_1_1eltwise__forward_1a2979502351c78589b1584d6bd25f5a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dnnl::eltwise_forward::eltwise_forward</definition>
        <argsstring>(const primitive_desc &amp;pd)</argsstring>
        <name>eltwise_forward</name>
        <param>
          <type>const <ref refid="structdnnl_1_1eltwise__forward_1_1primitive__desc" kindref="compound">primitive_desc</ref> &amp;</type>
          <declname>pd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs an eltwise forward propagation primitive. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pd</parametername>
</parameternamelist>
<parameterdescription>
<para>Primitive descriptor for an eltwise forward propagation primitive. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="3523" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Elementwise unary operation forward propagation primitive. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dnnl::eltwise_forward</label>
        <link refid="structdnnl_1_1eltwise__forward"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dnnl::primitive</label>
        <link refid="structdnnl_1_1primitive"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dnnl::eltwise_forward</label>
        <link refid="structdnnl_1_1eltwise__forward"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dnnl::primitive</label>
        <link refid="structdnnl_1_1primitive"/>
      </node>
    </collaborationgraph>
    <location file="include/dnnl.hpp" line="3452" column="39" bodyfile="include/dnnl.hpp" bodystart="3452" bodyend="3524"/>
    <listofallmembers>
      <member refid="structdnnl_1_1eltwise__forward_1ad93382cd4609f37a2de94de9c327b263" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>eltwise_forward</name></member>
      <member refid="structdnnl_1_1eltwise__forward_1a2979502351c78589b1584d6bd25f5a09" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>eltwise_forward</name></member>
      <member refid="structdnnl_1_1primitive_1ae2704b0577f2eaad1043256d8d619bc5" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>execute</name></member>
      <member refid="structdnnl_1_1primitive_1a5ce859d7357431fdeb50f308f9b22cf6" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>execute_sycl</name></member>
      <member refid="structdnnl_1_1primitive_1af2fbde28f5dfa02647c1d78b02f9cab7" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>get_kind</name></member>
      <member refid="structdnnl_1_1primitive_1ad1ec93215a0cf3aa0a32bae0c2cd9169" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>kind</name></member>
      <member refid="structdnnl_1_1primitive_1ab9f980d33289778feed22fa599700858" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>operator=</name></member>
      <member refid="structdnnl_1_1primitive_1a621390063073910b5a1bf8c25e30bc18" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>primitive</name></member>
      <member refid="structdnnl_1_1primitive_1a5c62a7df729fe0c22b5deb9afdbc337f" prot="public" virt="non-virtual"><scope>dnnl::eltwise_forward</scope><name>primitive</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
