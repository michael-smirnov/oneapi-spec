<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__dnnl__api__eltwise" kind="group">
    <compoundname>dnnl_api_eltwise</compoundname>
    <title>Eltwise</title>
    <innerclass refid="structdnnl_1_1eltwise__forward" prot="public">dnnl::eltwise_forward</innerclass>
    <innerclass refid="structdnnl_1_1eltwise__backward" prot="public">dnnl::eltwise_backward</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A primitive to perform elementwise operations such as the rectifier linear unit (ReLU).</para>
<para>Both forward and backward propagation primitives support in-place operation; that is, src and dst can refer to the same memory for forward propagation, and diff_dst and diff_src can refer to the same memory for backward propagation.</para>
<para><simplesect kind="warning"><para>Because the original source data is required for backward propagation, in-place forward propagation is not generally supported in the training mode. However, for namely ReLU with the alpha parameter set to 0, either dst or src can be used for the backward propagation, which makes it possible to get performance benefit even in the training mode. </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
