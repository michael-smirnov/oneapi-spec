<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structdnnl_1_1deconvolution__forward_1_1desc" kind="struct" language="C++" prot="public">
    <compoundname>dnnl::deconvolution_forward::desc</compoundname>
    <includes refid="dnnl_8hpp" local="no">dnnl.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdnnl_1_1deconvolution__forward_1_1desc_1a0047a0daaa6a75d7e7bdd70a4181d4aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dnnl::deconvolution_forward::desc::desc</definition>
        <argsstring>(prop_kind prop_kind, algorithm algorithm, const memory::desc &amp;src_desc, const memory::desc &amp;weights_desc, const memory::desc &amp;bias_desc, const memory::desc &amp;dst_desc, const memory::dims &amp;strides, const memory::dims &amp;padding_l, const memory::dims &amp;padding_r)</argsstring>
        <name>desc</name>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f" kindref="member">prop_kind</ref></type>
          <declname>prop_kind</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640" kindref="member">algorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>src_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>weights_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>bias_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>dst_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>strides</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>padding_l</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>padding_r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a descriptor for a deconvolution forward propagation primitive with bias.</para>
<para>Inputs:<itemizedlist>
<listitem><para><computeroutput>src</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1af42e791f493e636c086e13c6d4c06b43" kindref="member">dnnl::primitive_desc_base::src_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>weights</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>bias</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>1</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para>Outputs:<itemizedlist>
<listitem><para><computeroutput>dst</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1a495ee7c8e1ec3eab35f6329fdcd352bb" kindref="member">dnnl::primitive_desc_base::dst_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>Memory descriptors are allowed to be initialized with <ref refid="structdnnl_1_1memory_1a8e71077ed6a5f7fb7b3e6e1a5a2ecf3fa100b8cad7cf2a56f6df78f171f97a1ec" kindref="member">dnnl::memory::format_tag::any</ref> value of <computeroutput>format_tag</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prop_kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Propagation kind. Possible values are <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa24775787fab8f13aa4809e1ce8f82aeb" kindref="member">dnnl::prop_kind::forward_training</ref>, and <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa3b9fad4f80d45368f856b5403198ac4c" kindref="member">dnnl::prop_kind::forward_inference</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>Deconvolution algorithm: <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a73f81608d2b7315f04c438fb8be5f99c" kindref="member">dnnl::algorithm::deconvolution_direct</ref>, and <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aeb5da82914413424bf941fa04eb065aa" kindref="member">dnnl::algorithm::deconvolution_winograd</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Source memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias memory descriptor. Passing zero memory descriptor disables the bias term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strides</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of strides for spatial dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_l</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of padding values for low indices for each spatial dimension (front, top, left). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_r</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of padding values for high indices for each spatial dimension (back, bottom, right). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="2566" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdnnl_1_1deconvolution__forward_1_1desc_1a03574f586711b1f4f26beaa21dfeb606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dnnl::deconvolution_forward::desc::desc</definition>
        <argsstring>(prop_kind prop_kind, algorithm algorithm, const memory::desc &amp;src_desc, const memory::desc &amp;weights_desc, const memory::desc &amp;dst_desc, const memory::dims &amp;strides, const memory::dims &amp;padding_l, const memory::dims &amp;padding_r)</argsstring>
        <name>desc</name>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f" kindref="member">prop_kind</ref></type>
          <declname>prop_kind</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640" kindref="member">algorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>src_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>weights_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>dst_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>strides</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>padding_l</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>padding_r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a descriptor for a deconvolution forward propagation primitive without bias.</para>
<para>Inputs:<itemizedlist>
<listitem><para><computeroutput>src</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1af42e791f493e636c086e13c6d4c06b43" kindref="member">dnnl::primitive_desc_base::src_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>weights</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para>Outputs:<itemizedlist>
<listitem><para><computeroutput>dst</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1a495ee7c8e1ec3eab35f6329fdcd352bb" kindref="member">dnnl::primitive_desc_base::dst_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>Memory descriptors are allowed to be initialized with <ref refid="structdnnl_1_1memory_1a8e71077ed6a5f7fb7b3e6e1a5a2ecf3fa100b8cad7cf2a56f6df78f171f97a1ec" kindref="member">dnnl::memory::format_tag::any</ref> value of <computeroutput>format_tag</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prop_kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Propagation kind. Possible values are <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa24775787fab8f13aa4809e1ce8f82aeb" kindref="member">dnnl::prop_kind::forward_training</ref>, and <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa3b9fad4f80d45368f856b5403198ac4c" kindref="member">dnnl::prop_kind::forward_inference</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>Deconvolution algorithm: <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a73f81608d2b7315f04c438fb8be5f99c" kindref="member">dnnl::algorithm::deconvolution_direct</ref>, and <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aeb5da82914413424bf941fa04eb065aa" kindref="member">dnnl::algorithm::deconvolution_winograd</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Source memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strides</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of strides for spatial dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_l</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of padding values for low indices for each spatial dimension (front, top, left). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_r</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of padding values for high indices for each spatial dimension (back, bottom, right). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="2599" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdnnl_1_1deconvolution__forward_1_1desc_1acdc09416491e2562f9add9d7a869205b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dnnl::deconvolution_forward::desc::desc</definition>
        <argsstring>(prop_kind prop_kind, algorithm algorithm, const memory::desc &amp;src_desc, const memory::desc &amp;weights_desc, const memory::desc &amp;bias_desc, const memory::desc &amp;dst_desc, const memory::dims &amp;strides, const memory::dims &amp;dilates, const memory::dims &amp;padding_l, const memory::dims &amp;padding_r)</argsstring>
        <name>desc</name>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f" kindref="member">prop_kind</ref></type>
          <declname>prop_kind</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640" kindref="member">algorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>src_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>weights_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>bias_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>dst_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>strides</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>dilates</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>padding_l</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>padding_r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a descriptor for a dilated deconvolution forward propagation primitive with bias.</para>
<para>Inputs:<itemizedlist>
<listitem><para><computeroutput>src</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1af42e791f493e636c086e13c6d4c06b43" kindref="member">dnnl::primitive_desc_base::src_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>weights</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>bias</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>1</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para>Outputs:<itemizedlist>
<listitem><para><computeroutput>dst</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1a495ee7c8e1ec3eab35f6329fdcd352bb" kindref="member">dnnl::primitive_desc_base::dst_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>Memory descriptors are allowed to be initialized with <ref refid="structdnnl_1_1memory_1a8e71077ed6a5f7fb7b3e6e1a5a2ecf3fa100b8cad7cf2a56f6df78f171f97a1ec" kindref="member">dnnl::memory::format_tag::any</ref> value of <computeroutput>format_tag</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prop_kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Propagation kind. Possible values are <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa24775787fab8f13aa4809e1ce8f82aeb" kindref="member">dnnl::prop_kind::forward_training</ref>, and <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa3b9fad4f80d45368f856b5403198ac4c" kindref="member">dnnl::prop_kind::forward_inference</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>Deconvolution algorithm: <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a73f81608d2b7315f04c438fb8be5f99c" kindref="member">dnnl::algorithm::deconvolution_direct</ref>, and <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aeb5da82914413424bf941fa04eb065aa" kindref="member">dnnl::algorithm::deconvolution_winograd</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Source memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias memory descriptor. Passing zero memory descriptor disables the bias term. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strides</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of strides for spatial dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dilates</parametername>
</parameternamelist>
<parameterdescription>
<para>Dilations for each spatial dimension. A zero value means no dilation in the corresponding dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_l</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of padding values for low indices for each spatial dimension (front, top, left). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_r</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of padding values for high indices for each spatial dimension (back, bottom, right). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="2636" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structdnnl_1_1deconvolution__forward_1_1desc_1ae3fd5882193f10497949860215fb0cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dnnl::deconvolution_forward::desc::desc</definition>
        <argsstring>(prop_kind prop_kind, algorithm algorithm, const memory::desc &amp;src_desc, const memory::desc &amp;weights_desc, const memory::desc &amp;dst_desc, const memory::dims &amp;strides, const memory::dims &amp;dilates, const memory::dims &amp;padding_l, const memory::dims &amp;padding_r)</argsstring>
        <name>desc</name>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f" kindref="member">prop_kind</ref></type>
          <declname>prop_kind</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640" kindref="member">algorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>src_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>weights_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1_1desc" kindref="compound">memory::desc</ref> &amp;</type>
          <declname>dst_desc</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>strides</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>dilates</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>padding_l</declname>
        </param>
        <param>
          <type>const <ref refid="structdnnl_1_1memory_1a7d9f4b6ad8caf3969f436cd9ff27e9bb" kindref="member">memory::dims</ref> &amp;</type>
          <declname>padding_r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a descriptor for a dilated deconvolution forward propagation primitive without bias.</para>
<para>Inputs:<itemizedlist>
<listitem><para><computeroutput>src</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1af42e791f493e636c086e13c6d4c06b43" kindref="member">dnnl::primitive_desc_base::src_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem><listitem><para><computeroutput>weights</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1acb13d08987cca8d8f05ec4858fa61fb4" kindref="member">dnnl::primitive_desc_base::weights_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para>Outputs:<itemizedlist>
<listitem><para><computeroutput>dst</computeroutput> (<ref refid="structdnnl_1_1primitive__desc__base_1a495ee7c8e1ec3eab35f6329fdcd352bb" kindref="member">dnnl::primitive_desc_base::dst_desc</ref> (<computeroutput>0</computeroutput>))</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>Memory descriptors are allowed to be initialized with <ref refid="structdnnl_1_1memory_1a8e71077ed6a5f7fb7b3e6e1a5a2ecf3fa100b8cad7cf2a56f6df78f171f97a1ec" kindref="member">dnnl::memory::format_tag::any</ref> value of <computeroutput>format_tag</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prop_kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Propagation kind. Possible values are <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa24775787fab8f13aa4809e1ce8f82aeb" kindref="member">dnnl::prop_kind::forward_training</ref>, and <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa3b9fad4f80d45368f856b5403198ac4c" kindref="member">dnnl::prop_kind::forward_inference</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>Deconvolution algorithm: <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a73f81608d2b7315f04c438fb8be5f99c" kindref="member">dnnl::algorithm::deconvolution_direct</ref>, and <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aeb5da82914413424bf941fa04eb065aa" kindref="member">dnnl::algorithm::deconvolution_winograd</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Source memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination memory descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strides</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of strides for spatial dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dilates</parametername>
</parameternamelist>
<parameterdescription>
<para>Dilations for each spatial dimension. A zero value means no dilation in the corresponding dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_l</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of padding values for low indices for each spatial dimension (front, top, left). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding_r</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of padding values for high indices for each spatial dimension (back, bottom, right). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="2671" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Descriptor for a deconvolution forward propagation primitive. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dnnl.hpp" line="2535" column="15" bodyfile="include/dnnl.hpp" bodystart="2535" bodyend="2676"/>
    <listofallmembers>
      <member refid="structdnnl_1_1deconvolution__forward_1_1desc_1a0047a0daaa6a75d7e7bdd70a4181d4aa" prot="public" virt="non-virtual"><scope>dnnl::deconvolution_forward::desc</scope><name>desc</name></member>
      <member refid="structdnnl_1_1deconvolution__forward_1_1desc_1a03574f586711b1f4f26beaa21dfeb606" prot="public" virt="non-virtual"><scope>dnnl::deconvolution_forward::desc</scope><name>desc</name></member>
      <member refid="structdnnl_1_1deconvolution__forward_1_1desc_1acdc09416491e2562f9add9d7a869205b" prot="public" virt="non-virtual"><scope>dnnl::deconvolution_forward::desc</scope><name>desc</name></member>
      <member refid="structdnnl_1_1deconvolution__forward_1_1desc_1ae3fd5882193f10497949860215fb0cbc" prot="public" virt="non-virtual"><scope>dnnl::deconvolution_forward::desc</scope><name>desc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
