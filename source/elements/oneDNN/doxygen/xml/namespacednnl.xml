<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacednnl" kind="namespace" language="C++">
    <compoundname>dnnl</compoundname>
    <innerclass refid="structdnnl_1_1batch__normalization__backward" prot="public">dnnl::batch_normalization_backward</innerclass>
    <innerclass refid="structdnnl_1_1batch__normalization__forward" prot="public">dnnl::batch_normalization_forward</innerclass>
    <innerclass refid="structdnnl_1_1binary" prot="public">dnnl::binary</innerclass>
    <innerclass refid="structdnnl_1_1concat" prot="public">dnnl::concat</innerclass>
    <innerclass refid="structdnnl_1_1convolution__backward__data" prot="public">dnnl::convolution_backward_data</innerclass>
    <innerclass refid="structdnnl_1_1convolution__backward__weights" prot="public">dnnl::convolution_backward_weights</innerclass>
    <innerclass refid="structdnnl_1_1convolution__forward" prot="public">dnnl::convolution_forward</innerclass>
    <innerclass refid="structdnnl_1_1deconvolution__backward__data" prot="public">dnnl::deconvolution_backward_data</innerclass>
    <innerclass refid="structdnnl_1_1deconvolution__backward__weights" prot="public">dnnl::deconvolution_backward_weights</innerclass>
    <innerclass refid="structdnnl_1_1deconvolution__forward" prot="public">dnnl::deconvolution_forward</innerclass>
    <innerclass refid="structdnnl_1_1eltwise__backward" prot="public">dnnl::eltwise_backward</innerclass>
    <innerclass refid="structdnnl_1_1eltwise__forward" prot="public">dnnl::eltwise_forward</innerclass>
    <innerclass refid="structdnnl_1_1engine" prot="public">dnnl::engine</innerclass>
    <innerclass refid="structdnnl_1_1error" prot="public">dnnl::error</innerclass>
    <innerclass refid="structdnnl_1_1gru__backward" prot="public">dnnl::gru_backward</innerclass>
    <innerclass refid="structdnnl_1_1gru__forward" prot="public">dnnl::gru_forward</innerclass>
    <innerclass refid="structdnnl_1_1inner__product__backward__data" prot="public">dnnl::inner_product_backward_data</innerclass>
    <innerclass refid="structdnnl_1_1inner__product__backward__weights" prot="public">dnnl::inner_product_backward_weights</innerclass>
    <innerclass refid="structdnnl_1_1inner__product__forward" prot="public">dnnl::inner_product_forward</innerclass>
    <innerclass refid="structdnnl_1_1layer__normalization__backward" prot="public">dnnl::layer_normalization_backward</innerclass>
    <innerclass refid="structdnnl_1_1layer__normalization__forward" prot="public">dnnl::layer_normalization_forward</innerclass>
    <innerclass refid="structdnnl_1_1lbr__gru__backward" prot="public">dnnl::lbr_gru_backward</innerclass>
    <innerclass refid="structdnnl_1_1lbr__gru__forward" prot="public">dnnl::lbr_gru_forward</innerclass>
    <innerclass refid="structdnnl_1_1logsoftmax__backward" prot="public">dnnl::logsoftmax_backward</innerclass>
    <innerclass refid="structdnnl_1_1logsoftmax__forward" prot="public">dnnl::logsoftmax_forward</innerclass>
    <innerclass refid="structdnnl_1_1lrn__backward" prot="public">dnnl::lrn_backward</innerclass>
    <innerclass refid="structdnnl_1_1lrn__forward" prot="public">dnnl::lrn_forward</innerclass>
    <innerclass refid="structdnnl_1_1lstm__backward" prot="public">dnnl::lstm_backward</innerclass>
    <innerclass refid="structdnnl_1_1lstm__forward" prot="public">dnnl::lstm_forward</innerclass>
    <innerclass refid="structdnnl_1_1matmul" prot="public">dnnl::matmul</innerclass>
    <innerclass refid="structdnnl_1_1memory" prot="public">dnnl::memory</innerclass>
    <innerclass refid="structdnnl_1_1pooling__backward" prot="public">dnnl::pooling_backward</innerclass>
    <innerclass refid="structdnnl_1_1pooling__forward" prot="public">dnnl::pooling_forward</innerclass>
    <innerclass refid="structdnnl_1_1post__ops" prot="public">dnnl::post_ops</innerclass>
    <innerclass refid="structdnnl_1_1primitive" prot="public">dnnl::primitive</innerclass>
    <innerclass refid="structdnnl_1_1primitive__attr" prot="public">dnnl::primitive_attr</innerclass>
    <innerclass refid="structdnnl_1_1primitive__desc" prot="public">dnnl::primitive_desc</innerclass>
    <innerclass refid="structdnnl_1_1primitive__desc__base" prot="public">dnnl::primitive_desc_base</innerclass>
    <innerclass refid="structdnnl_1_1reorder" prot="public">dnnl::reorder</innerclass>
    <innerclass refid="structdnnl_1_1resampling__backward" prot="public">dnnl::resampling_backward</innerclass>
    <innerclass refid="structdnnl_1_1resampling__forward" prot="public">dnnl::resampling_forward</innerclass>
    <innerclass refid="structdnnl_1_1rnn__primitive__desc__base" prot="public">dnnl::rnn_primitive_desc_base</innerclass>
    <innerclass refid="structdnnl_1_1shuffle__backward" prot="public">dnnl::shuffle_backward</innerclass>
    <innerclass refid="structdnnl_1_1shuffle__forward" prot="public">dnnl::shuffle_forward</innerclass>
    <innerclass refid="structdnnl_1_1softmax__backward" prot="public">dnnl::softmax_backward</innerclass>
    <innerclass refid="structdnnl_1_1softmax__forward" prot="public">dnnl::softmax_forward</innerclass>
    <innerclass refid="structdnnl_1_1stream" prot="public">dnnl::stream</innerclass>
    <innerclass refid="structdnnl_1_1sum" prot="public">dnnl::sum</innerclass>
    <innerclass refid="structdnnl_1_1vanilla__rnn__backward" prot="public">dnnl::vanilla_rnn_backward</innerclass>
    <innerclass refid="structdnnl_1_1vanilla__rnn__forward" prot="public">dnnl::vanilla_rnn_forward</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__dnnl__api__attributes_1gac24d40ceea0256c7d6cc3a383a0fa07f" prot="public" static="no" strong="yes">
        <type></type>
        <name>scratchpad_mode</name>
        <enumvalue id="group__dnnl__api__attributes_1ggac24d40ceea0256c7d6cc3a383a0fa07fad521f765a49c72507257a2620612ee96" prot="public">
          <name>library</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The library manages the scratchpad allocation. There may be multiple implementation-specific policies that can be configured via mechanisms that fall outside of the scope of this specification. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac24d40ceea0256c7d6cc3a383a0fa07faee11cbb19052e40b07aac0ca060c23ee" prot="public">
          <name>user</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>User manages the scratchpad allocation. They shall query and provide the scratchpad memory to primitives This mode is thread-safe as long as the scratchpad buffers are not used concurrently by two primitive executions. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Scratchpad mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="351" column="27" bodyfile="include/dnnl.hpp" bodystart="351" bodyend="361"/>
      </memberdef>
      <memberdef kind="enum" id="group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f" prot="public" static="no" strong="yes">
        <type></type>
        <name>prop_kind</name>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438faf31ee5e3824f1f5e5d206bdf3029f22b" prot="public">
          <name>undef</name>
          <briefdescription>
<para>Undefined propagation kind. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa24775787fab8f13aa4809e1ce8f82aeb" prot="public">
          <name>forward_training</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Forward data propagation (training mode). In this mode primitives perform computations necessary for subsequent backward propagation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa3b9fad4f80d45368f856b5403198ac4c" prot="public">
          <name>forward_inference</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Forward data propagation (inference mode). In this mode primitives perform only computations that are necessary for inference and omit computations that are necessary only for backward propagation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa4f2df7bab0115f1ddbe25392e3a71542" prot="public">
          <name>forward_scoring</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Forward data propagation, alias for <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa3b9fad4f80d45368f856b5403198ac4c" kindref="member">dnnl::prop_kind::forward_inference</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa965dbaac085fc891bfbbd4f9d145bbc8" prot="public">
          <name>forward</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Forward data propagation, alias for <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa24775787fab8f13aa4809e1ce8f82aeb" kindref="member">dnnl::prop_kind::forward_training</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa195fe59b6f103787a914aead0f3db502" prot="public">
          <name>backward</name>
          <briefdescription>
<para>Backward propagation (with respect to all parameters). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438faa12627cacf73ecb7ef088beedd650e96" prot="public">
          <name>backward_data</name>
          <briefdescription>
<para>Backward data propagation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa1a002980f340e61153a9f7de4f794cf6" prot="public">
          <name>backward_weights</name>
          <briefdescription>
<para>Backward weights propagation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fab6b02795407dc7897e390e48f1d0ea02" prot="public">
          <name>backward_bias</name>
          <briefdescription>
<para>Backward bias propagation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Propagation kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="364" column="21" bodyfile="include/dnnl.hpp" bodystart="364" bodyend="388"/>
      </memberdef>
      <memberdef kind="enum" id="group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640" prot="public" static="no" strong="yes">
        <type></type>
        <name>algorithm</name>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640af31ee5e3824f1f5e5d206bdf3029f22b" prot="public">
          <name>undef</name>
          <briefdescription>
<para>Undefined algorithm. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640acfdececd63a8bc0cfe1021ad614e2ded" prot="public">
          <name>convolution_auto</name>
          <briefdescription>
<para>Convolution algorithm (either direct or Winograd) to be chosen just in time. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a5028ad8f818a45333a8a0eefad35c5c0" prot="public">
          <name>convolution_direct</name>
          <briefdescription>
<para>Direct convolution. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a6a73ed41c67672f76f53a69e96c31ed4" prot="public">
          <name>convolution_winograd</name>
          <briefdescription>
<para>Winograd convolution. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a73f81608d2b7315f04c438fb8be5f99c" prot="public">
          <name>deconvolution_direct</name>
          <briefdescription>
<para>Direct deconvolution. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aeb5da82914413424bf941fa04eb065aa" prot="public">
          <name>deconvolution_winograd</name>
          <briefdescription>
<para>Winograd deconvolution. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aba09bebb742494255b90b43871c01c69" prot="public">
          <name>eltwise_relu</name>
          <briefdescription>
<para>Elementwise: rectified linear unit (ReLU) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a38dd7159307eab45742c78e72f06abb0" prot="public">
          <name>eltwise_tanh</name>
          <briefdescription>
<para>Elementwise: hyperbolic tangent non-linearity (tanh) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a690376cad4a7f001e967a6a40d04da3a" prot="public">
          <name>eltwise_elu</name>
          <briefdescription>
<para>Elementwise: parametric exponential linear unit (ELU) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a448fc250a28e651c02966142f7f66cce" prot="public">
          <name>eltwise_square</name>
          <briefdescription>
<para>Elementwise: square. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a30046c43b9399a7aaa4281da7cff2d5c" prot="public">
          <name>eltwise_abs</name>
          <briefdescription>
<para>Elementwise: abs. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a83b978b280304349860c7cdc3519865f" prot="public">
          <name>eltwise_sqrt</name>
          <briefdescription>
<para>Elementwise: square root. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a97395201ce1744f18c19d243d24fbd13" prot="public">
          <name>eltwise_swish</name>
          <briefdescription>
<para>Elementwise: swish ( <formula id="0">$x \cdot sigmoid(a \cdot x)$</formula>) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a21aba6844d2de47b92ab1d110f561945" prot="public">
          <name>eltwise_linear</name>
          <briefdescription>
<para>Elementwise: linear. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a4142c71f159526fef4c85b8c5ae78a72" prot="public">
          <name>eltwise_bounded_relu</name>
          <briefdescription>
<para>Elementwise: bounded_relu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a23175afeee905a4de38e5a24b46cb6e2" prot="public">
          <name>eltwise_soft_relu</name>
          <briefdescription>
<para>Elementwise: soft_relu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a282836cce833348ee509b0ecd764d217" prot="public">
          <name>eltwise_logistic</name>
          <briefdescription>
<para>Elementwise: logistic. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a6506e1f0284a4bb8cb999b49c6142599" prot="public">
          <name>eltwise_exp</name>
          <briefdescription>
<para>Elementwise: exponent. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a8320b34de5fed32c795cd92a7fbf4749" prot="public">
          <name>eltwise_gelu</name>
          <briefdescription>
<para>Elementwise: gelu. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640af2a460e3ec273e904c6f6b39baa5e477" prot="public">
          <name>eltwise_log</name>
          <briefdescription>
<para>Elementwise: natural logarithm. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a2aa1edfbe21c6770d63301058ec753ed" prot="public">
          <name>eltwise_clip</name>
          <briefdescription>
<para>Elementwise: clip. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a30977b2a33c3a2bd6a5d71a352fa4bcc" prot="public">
          <name>eltwise_pow</name>
          <briefdescription>
<para>Elementwise: pow. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ac227b99192be41d4060b700d1e788fd6" prot="public">
          <name>eltwise_relu_use_dst_for_bwd</name>
          <briefdescription>
<para>Elementwise: rectified linar unit (ReLU) (dst for backward) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a0be1df5ff86383197efdfeb01b10e046" prot="public">
          <name>eltwise_tanh_use_dst_for_bwd</name>
          <briefdescription>
<para>Elementwise: hyperbolic tangent non-linearity (tanh) (dst for backward) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a09b26fc530b10556b14bc8e9b2d29d35" prot="public">
          <name>eltwise_elu_use_dst_for_bwd</name>
          <briefdescription>
<para>Elementwise: exponential linear unit (ELU) (dst for backward) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ad5704aaf680703d473f983e3f19b8d4d" prot="public">
          <name>eltwise_sqrt_use_dst_for_bwd</name>
          <briefdescription>
<para>Elementwise: square root (dst for backward) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a40f1d6681d0ad7bf3e9313641e03ae14" prot="public">
          <name>eltwise_logistic_use_dst_for_bwd</name>
          <briefdescription>
<para>Elementwise: logistic (dst for backward) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ad10dade245ba1cbe70859fcbdad27637" prot="public">
          <name>eltwise_exp_use_dst_for_bwd</name>
          <briefdescription>
<para>Elementwise: exponent (dst for backward) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ab9e2d858b551792385a4b5b86672b24b" prot="public">
          <name>lrn_across_channels</name>
          <briefdescription>
<para>Local response normalization (LRN) across multiple channels. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640aa25c4ccc5c7c9bd3a977a2089189a494" prot="public">
          <name>lrn_within_channel</name>
          <briefdescription>
<para>LRN within a single channel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a8c73d4bb88a0497586a74256bb338e88" prot="public">
          <name>pooling_max</name>
          <briefdescription>
<para>Max pooling. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a7702ff2872aa0321d96ea7134bad855a" prot="public">
          <name>pooling_avg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Average pooling exclude padding, alias for <ref refid="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ad62617dd43972a6bbff8d263a5c4462c" kindref="member">dnnl::algorithm::pooling_avg_include_padding</ref> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ad62617dd43972a6bbff8d263a5c4462c" prot="public">
          <name>pooling_avg_include_padding</name>
          <briefdescription>
<para>Average pooling include padding. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a7ed10af2056450d8f6ac7277b48fc6a8" prot="public">
          <name>pooling_avg_exclude_padding</name>
          <briefdescription>
<para>Average pooling exclude padding. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ab2b3bfcaad515fd1bf0245e8ae6bd407" prot="public">
          <name>vanilla_rnn</name>
          <briefdescription>
<para>RNN cell. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a716a71a7a6ec13785b552dc2412380ce" prot="public">
          <name>vanilla_lstm</name>
          <briefdescription>
<para>LSTM cell. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a272fa682d36b810a24ec89202b7a31f7" prot="public">
          <name>vanilla_gru</name>
          <briefdescription>
<para>GRU cell. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a792e966b14bd4e16625ee4df357a0723" prot="public">
          <name>lbr_gru</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>GRU cell with linear before reset. Differs from original GRU in how the new memory gate is calculated: <formula id="1">$c_t = tanh(W_c*x_t + b_{c_x} + r_t*(U_c*h_{t-1}+b_{c_h})) $</formula> LRB GRU expects 4 bias tensors on input: <formula id="2">$[b_{u}, b_{r}, b_{c_x}, b_{c_h}]$</formula> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ab2c3faf084cf82b5603946995f637b35" prot="public">
          <name>binary_add</name>
          <briefdescription>
<para>Binary add. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a0905fc5c22e79a8eed0988681eb6a0ae" prot="public">
          <name>binary_mul</name>
          <briefdescription>
<para>Binary mul. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a4ae0aa1c0bf5bd1bf54564a2485618be" prot="public">
          <name>binary_max</name>
          <briefdescription>
<para>Binary max. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640ad096699e4ea7ada3d71428484e6119d8" prot="public">
          <name>binary_min</name>
          <briefdescription>
<para>Binary min. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a091b262cfae5e610fcad1490bfb79431" prot="public">
          <name>resampling_nearest</name>
          <briefdescription>
<para>Nearest Neighbor resampling method. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a05731680a83c6dccd19a758b72a4ecbd" prot="public">
          <name>resampling_linear</name>
          <briefdescription>
<para>Linear (Bilinear, Trilinear) resampling method. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Kinds of algorithms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="391" column="21" bodyfile="include/dnnl.hpp" bodystart="391" bodyend="485"/>
      </memberdef>
      <memberdef kind="enum" id="group__dnnl__api__primitives__common_1gad8ef0fcbb7b10cae3d67dd46892002be" prot="public" static="no" strong="yes">
        <type>unsigned</type>
        <name>normalization_flags</name>
        <enumvalue id="group__dnnl__api__primitives__common_1ggad8ef0fcbb7b10cae3d67dd46892002bea95768ff8afb8ee75dc24be0d307627f8" prot="public">
          <name>use_global_stats</name>
          <initializer>= 0x1u</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use global statistics. If specified, the library uses mean and variance provided by user as an input on forward propagation and does not compute their derivatives on backward propagation. Otherwise, the library computes and outputs mean and variance on forward propagation, and their derivatives on backward propagation. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1ggad8ef0fcbb7b10cae3d67dd46892002bea0cbad8a346551ec47da7ff1afb1e1f76" prot="public">
          <name>use_scale_shift</name>
          <initializer>= 0x2u</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use scale and shift parameters. If specified, user is expected to pass scale and shift as inputs on forward propagation. On backward propagation of type <ref refid="group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438fa195fe59b6f103787a914aead0f3db502" kindref="member">dnnl::prop_kind::backward</ref>, the library computes their derivatives. If not specified, the scale and shift parameters are not used by the library in any way. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1ggad8ef0fcbb7b10cae3d67dd46892002bea898ce555425ee54271096bc9c8e0400c" prot="public">
          <name>fuse_norm_relu</name>
          <initializer>= 0x4u</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Fuse normalization with ReLU. On training, normalization will require workspace to implement backward propagation. On inference, the workspace is not require and behavior is the same as when normalization is fused with ReLU using the post-ops API. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags for batch normalization primitive (can be combined via &apos;|&apos;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="493" column="31" bodyfile="include/dnnl.hpp" bodystart="493" bodyend="513"/>
      </memberdef>
      <memberdef kind="enum" id="group__dnnl__api__rnn_1gad27d0db2a86ae3072207769f5c2ddd1e" prot="public" static="no" strong="yes">
        <type>unsigned</type>
        <name>rnn_flags</name>
        <enumvalue id="group__dnnl__api__rnn_1ggad27d0db2a86ae3072207769f5c2ddd1eaf31ee5e3824f1f5e5d206bdf3029f22b" prot="public">
          <name>undef</name>
          <briefdescription>
<para>Undefined RNN flags. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>RNN cell flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="524" column="21" bodyfile="include/dnnl.hpp" bodystart="524" bodyend="527"/>
      </memberdef>
      <memberdef kind="enum" id="group__dnnl__api__rnn_1ga33315cf335d1cbe26fd6b70d956e23d5" prot="public" static="no" strong="yes">
        <type></type>
        <name>rnn_direction</name>
        <enumvalue id="group__dnnl__api__rnn_1gga33315cf335d1cbe26fd6b70d956e23d5a04f4bf4bc6a47e30f0353597e244c44a" prot="public">
          <name>unidirectional_left2right</name>
          <briefdescription>
<para>Unidirectional execution of RNN primitive from left to right. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__rnn_1gga33315cf335d1cbe26fd6b70d956e23d5a0b694765eed7cf5a48e18c1d05b74118" prot="public">
          <name>unidirectional_right2left</name>
          <briefdescription>
<para>Unidirectional execution of RNN primitive from right to left. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__rnn_1gga33315cf335d1cbe26fd6b70d956e23d5a7a1bb9f8699e8c03cbe4bd681fb50830" prot="public">
          <name>bidirectional_concat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bidirectional execution of RNN primitive with concatenation of the results. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__rnn_1gga33315cf335d1cbe26fd6b70d956e23d5aa6199c5b651803844c8c054b11e88d8c" prot="public">
          <name>bidirectional_sum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bidirectional execution of RNN primitive with summation of the results. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__rnn_1gga33315cf335d1cbe26fd6b70d956e23d5aa0c3ef5c69c32081a31c33df63192cda" prot="public">
          <name>unidirectional</name>
          <initializer>= unidirectional_left2right</initializer>
          <briefdescription>
<para>Alias for <ref refid="group__dnnl__api__rnn_1gga33315cf335d1cbe26fd6b70d956e23d5a04f4bf4bc6a47e30f0353597e244c44a" kindref="member">dnnl::rnn_direction::unidirectional_left2right</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A direction of RNN primitive execution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="533" column="25" bodyfile="include/dnnl.hpp" bodystart="533" bodyend="546"/>
      </memberdef>
      <memberdef kind="enum" id="group__dnnl__api__primitives__common_1ga94efdd650364f4d9776cfb9b711cbdc1" prot="public" static="no" strong="yes">
        <type></type>
        <name>query</name>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1af31ee5e3824f1f5e5d206bdf3029f22b" prot="public">
          <name>undef</name>
          <briefdescription>
<para>no query </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1aad1943a9fd6d3d7ee1e6af41a5b0d3e7" prot="public">
          <name>engine</name>
          <briefdescription>
<para>execution engine </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a6e115efac481dc815e442e6ff181f7e2" prot="public">
          <name>primitive_kind</name>
          <briefdescription>
<para>primitive kind </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a8e76d4a603e890128e5205c75581f80b" prot="public">
          <name>num_of_inputs_s32</name>
          <briefdescription>
<para>number of inputs expected </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a60ba192a313fabc2c91f5295d1422491" prot="public">
          <name>num_of_outputs_s32</name>
          <briefdescription>
<para>number of outputs expected </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1ab307b4b4cf28742beddf2e9e2de6bce0" prot="public">
          <name>time_estimate_f64</name>
          <briefdescription>
<para>runtime estimation (seconds), unimplemented </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a0ed44d67e94c1c7ac5f219491e422506" prot="public">
          <name>memory_consumption_s64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>memory consumption (bytes) <verbatim>extra (scratch) memory, additional to all inputs and outputs memory 
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a75db5e5697414843589825652e338a9a" prot="public">
          <name>scratchpad_engine</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>scratchpad engine <verbatim>engine to be used for creating scratchpad memory 
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a783fb4ccfa962b218a2acbd35dd7ec27" prot="public">
          <name>reorder_src_engine</name>
          <briefdescription>
<para>reorder source engine </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1aa08e784e657998224809d67bde0787ce" prot="public">
          <name>reorder_dst_engine</name>
          <briefdescription>
<para>reorder destination engine </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a2c6dbd26a5e4bd5689bdcbfdf00e35cf" prot="public">
          <name>impl_info_str</name>
          <briefdescription>
<para>implementation name </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a2ba5356a73a761f488b6d9e5f028134f" prot="public">
          <name>prop_kind</name>
          <briefdescription>
<para>propagation kind </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a80d6826f84ba733d4bd57ca0812d1d24" prot="public">
          <name>op_d</name>
          <briefdescription>
<para>operation descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1aae384e1cebb4565bd9a57ff4a19145a7" prot="public">
          <name>convolution_d</name>
          <briefdescription>
<para>convolution descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a2c191a4c2f3830f7960fd2d7eff440ff" prot="public">
          <name>deconvolution_d</name>
          <briefdescription>
<para>deconvolution descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a22964f067fb5f173218eb8aa9f6c22c2" prot="public">
          <name>shuffle_d</name>
          <briefdescription>
<para>shuffle descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a43bc6c42da7ccfcbc6ef6a26035ed932" prot="public">
          <name>eltwise_d</name>
          <briefdescription>
<para>eltwise descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a5be7596ca77ae38c8f14dd9d29c55760" prot="public">
          <name>softmax_d</name>
          <briefdescription>
<para>softmax descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a8c55c4b147af6d6e1de777e25e519bd4" prot="public">
          <name>pooling_d</name>
          <briefdescription>
<para>pooling descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1adfe43d0a7bd9b03655ad7bcbdeba3b49" prot="public">
          <name>lrn_d</name>
          <briefdescription>
<para>lrn descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a045eb225315e70a20e0b8c6d9700f642" prot="public">
          <name>batch_normalization_d</name>
          <briefdescription>
<para>batch normalization descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a867a57dd825838fe593a8ef3a07cfa60" prot="public">
          <name>layer_normalization_d</name>
          <briefdescription>
<para>layer normalization descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1aded69e5210888fc8315d2f7e90d7ba15" prot="public">
          <name>inner_product_d</name>
          <briefdescription>
<para>inner product descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a5bada9b07803d3e657d5bdc592f7fc52" prot="public">
          <name>rnn_d</name>
          <briefdescription>
<para>rnn descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1ab63c80112add4f3a967c6a08c2d4884b" prot="public">
          <name>binary_d</name>
          <briefdescription>
<para>binary descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a88653ad56ff6de4e2f36f3feda914af1" prot="public">
          <name>logsoftmax_d</name>
          <briefdescription>
<para>logsoftmax descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a4a7fa4b07a2f5ef2534d7159225f480d" prot="public">
          <name>matmul_d</name>
          <briefdescription>
<para>matmul descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1afcc6f3d53b14544cb287a355c2f1f228" prot="public">
          <name>resampling_d</name>
          <briefdescription>
<para>resampling descriptor </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a90a729e395453e1d9411ad416c796819" prot="public">
          <name>src_md</name>
          <briefdescription>
<para>source memory desc </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a8f85b9dfff73532e30d8aab798020233" prot="public">
          <name>diff_src_md</name>
          <briefdescription>
<para>source gradient (diff) memory desc </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a06ba7b00a8c95dcf3a90e16d00eeb0e9" prot="public">
          <name>weights_md</name>
          <briefdescription>
<para>weights memory descriptor desc </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a345e134a47299ca126f8cc4aeeeb05ac" prot="public">
          <name>diff_weights_md</name>
          <briefdescription>
<para>weights gradient (diff) memory desc </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a701158248eed4e5fc84610f2f6026493" prot="public">
          <name>dst_md</name>
          <briefdescription>
<para>destination memory desc </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1ab731735b7280a17b7b03c964cf9b1967" prot="public">
          <name>diff_dst_md</name>
          <briefdescription>
<para>destination gradient (diff) memory desc </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a3874c56bb4069607213666573dff2a96" prot="public">
          <name>workspace_md</name>
          <briefdescription>
<para>workspace memory desc </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1a9cbdd03b65c030ef560b5555be1a86c2" prot="public">
          <name>scratchpad_md</name>
          <briefdescription>
<para>scratchpad memory desc </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dnnl__api__primitives__common_1gga94efdd650364f4d9776cfb9b711cbdc1ad531896cf1d66c4832790f428623f164" prot="public">
          <name>exec_arg_md</name>
          <briefdescription>
<para>memory desc of an execute argument </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Primitive descriptor query specification. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="554" column="17" bodyfile="include/dnnl.hpp" bodystart="554" bodyend="642"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dnnl__api__primitives__common_1gad8e70644d9fbaa2f759a911d026204f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__dnnl__api__primitives__common_1gad8ef0fcbb7b10cae3d67dd46892002be" kindref="member">normalization_flags</ref></type>
        <definition>normalization_flags dnnl::operator|</definition>
        <argsstring>(normalization_flags lhs, normalization_flags rhs)</argsstring>
        <name>operator|</name>
        <param>
          <type><ref refid="group__dnnl__api__primitives__common_1gad8ef0fcbb7b10cae3d67dd46892002be" kindref="member">normalization_flags</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__primitives__common_1gad8ef0fcbb7b10cae3d67dd46892002be" kindref="member">normalization_flags</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Bitwise OR operation for batch normalization flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="516" column="21" declfile="include/dnnl.hpp" declline="516" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="group__dnnl__api__rnn_1ga8a1ddcd99ba74311e25ee48aed43d6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__dnnl__api__rnn_1gad27d0db2a86ae3072207769f5c2ddd1e" kindref="member">rnn_flags</ref></type>
        <definition>rnn_flags dnnl::operator|</definition>
        <argsstring>(rnn_flags lhs, rnn_flags rhs)</argsstring>
        <name>operator|</name>
        <param>
          <type><ref refid="group__dnnl__api__rnn_1gad27d0db2a86ae3072207769f5c2ddd1e" kindref="member">rnn_flags</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="group__dnnl__api__rnn_1gad27d0db2a86ae3072207769f5c2ddd1e" kindref="member">rnn_flags</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Bitwise OR operation for RNN cell flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dnnl.hpp" line="530" column="11" declfile="include/dnnl.hpp" declline="530" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>DNNL namespace. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/dnnl.hpp" line="38" column="14"/>
  </compounddef>
</doxygen>
