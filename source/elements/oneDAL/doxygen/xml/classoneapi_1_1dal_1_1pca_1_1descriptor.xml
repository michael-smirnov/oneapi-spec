<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classoneapi_1_1dal_1_1pca_1_1descriptor" kind="class" language="C++" prot="public">
    <compoundname>oneapi::dal::pca::descriptor</compoundname>
    <includes refid="pca_8hpp" local="no">pca.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Float</type>
        <defval>float</defval>
      </param>
      <param>
        <type>typename Method</type>
        <defval><ref refid="structoneapi_1_1dal_1_1pca_1_1method_1_1cov" kindref="compound">method::by_default</ref></defval>
      </param>
      <param>
        <type>typename Task</type>
        <defval><ref refid="structoneapi_1_1dal_1_1pca_1_1task_1_1dim__reduction" kindref="compound">task::by_default</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classoneapi_1_1dal_1_1pca_1_1descriptor_1a6e9e7da5ba8a199a5f6c9f8970fdce35" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>descriptor</definition>
        <argsstring>(std::int64_t component_count=0)</argsstring>
        <name>descriptor</name>
        <param>
          <type>std::int64_t</type>
          <declname>component_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new instance of the class with the given :literal:<computeroutput>component_count</computeroutput> property value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/pca.hpp" line="43" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1pca_1_1descriptor_1adeddbe77f71efb63255fc85fb5ae21e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t get_component_count</definition>
        <argsstring>() const</argsstring>
        <name>get_component_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of principal components $r$. If it is zero, the algorithm computes the eigenvectors for all features, $r = p$. <simplesect kind="remark"><para>default = 0 </para>
</simplesect>
<simplesect kind="invariant"><para>:expr:<computeroutput>component_count &gt;= 0</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/pca.hpp" line="49" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1pca_1_1descriptor_1a00a3b52a645ef695d970315951392adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classoneapi_1_1dal_1_1pca_1_1descriptor" kindref="compound">descriptor</ref> &amp;</type>
        <definition>descriptor&amp; set_component_count</definition>
        <argsstring>(int64_t)</argsstring>
        <name>set_component_count</name>
        <param>
          <type>int64_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/pca.hpp" line="50" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1pca_1_1descriptor_1af8d48499d6f98f38530ddb2582b5c8e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_deterministic</definition>
        <argsstring>() const</argsstring>
        <name>get_deterministic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specifies whether the algorithm applies the <computeroutput>Sign-flip technique</computeroutput>_. If it is <computeroutput>true</computeroutput>, the directions of the eigenvectors must be deterministic. <simplesect kind="remark"><para>default = true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/pca.hpp" line="55" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1pca_1_1descriptor_1a9cd80d12ad34a37eb0b328f79282de3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classoneapi_1_1dal_1_1pca_1_1descriptor" kindref="compound">descriptor</ref> &amp;</type>
        <definition>descriptor&amp; set_deterministic</definition>
        <argsstring>(bool)</argsstring>
        <name>set_deterministic</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/pca.hpp" line="56" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Float</parametername>
</parameternamelist>
<parameterdescription>
<para>The floating-point type that the algorithm uses for intermediate computations. Can be :expr:<computeroutput>float</computeroutput> or :expr:<computeroutput>double</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Method</parametername>
</parameternamelist>
<parameterdescription>
<para>Tag-type that specifies an implementation of algorithm. Can be :expr:<computeroutput><ref refid="structoneapi_1_1dal_1_1pca_1_1method_1_1cov" kindref="compound">method::cov</ref></computeroutput> or :expr:<computeroutput><ref refid="structoneapi_1_1dal_1_1pca_1_1method_1_1svd" kindref="compound">method::svd</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Task</parametername>
</parameternamelist>
<parameterdescription>
<para>Tag-type that specifies type of the problem to solve. Can be :expr:<computeroutput><ref refid="structoneapi_1_1dal_1_1pca_1_1task_1_1dim__reduction" kindref="compound">task::dim_reduction</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/oneapi/dal/algo/pca.hpp" line="39" column="17" bodyfile="include/oneapi/dal/algo/pca.hpp" bodystart="39" bodyend="57"/>
    <listofallmembers>
      <member refid="classoneapi_1_1dal_1_1pca_1_1descriptor_1a6e9e7da5ba8a199a5f6c9f8970fdce35" prot="public" virt="non-virtual"><scope>oneapi::dal::pca::descriptor</scope><name>descriptor</name></member>
      <member refid="classoneapi_1_1dal_1_1pca_1_1descriptor_1adeddbe77f71efb63255fc85fb5ae21e2" prot="public" virt="non-virtual"><scope>oneapi::dal::pca::descriptor</scope><name>get_component_count</name></member>
      <member refid="classoneapi_1_1dal_1_1pca_1_1descriptor_1af8d48499d6f98f38530ddb2582b5c8e5" prot="public" virt="non-virtual"><scope>oneapi::dal::pca::descriptor</scope><name>get_deterministic</name></member>
      <member refid="classoneapi_1_1dal_1_1pca_1_1descriptor_1a00a3b52a645ef695d970315951392adb" prot="public" virt="non-virtual"><scope>oneapi::dal::pca::descriptor</scope><name>set_component_count</name></member>
      <member refid="classoneapi_1_1dal_1_1pca_1_1descriptor_1a9cd80d12ad34a37eb0b328f79282de3b" prot="public" virt="non-virtual"><scope>oneapi::dal::pca::descriptor</scope><name>set_deterministic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
