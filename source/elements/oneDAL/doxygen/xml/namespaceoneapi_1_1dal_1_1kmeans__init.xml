<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceoneapi_1_1dal_1_1kmeans__init" kind="namespace" language="C++">
    <compoundname>oneapi::dal::kmeans_init</compoundname>
    <innerclass refid="classoneapi_1_1dal_1_1kmeans__init_1_1compute__input" prot="public">oneapi::dal::kmeans_init::compute_input</innerclass>
    <innerclass refid="classoneapi_1_1dal_1_1kmeans__init_1_1compute__result" prot="public">oneapi::dal::kmeans_init::compute_result</innerclass>
    <innerclass refid="classoneapi_1_1dal_1_1kmeans__init_1_1descriptor" prot="public">oneapi::dal::kmeans_init::descriptor</innerclass>
    <innernamespace refid="namespaceoneapi_1_1dal_1_1kmeans__init_1_1example">oneapi::dal::kmeans_init::example</innernamespace>
    <innernamespace refid="namespaceoneapi_1_1dal_1_1kmeans__init_1_1method">oneapi::dal::kmeans_init::method</innernamespace>
    <innernamespace refid="namespaceoneapi_1_1dal_1_1kmeans__init_1_1task">oneapi::dal::kmeans_init::task</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="kmeans__init_8hpp_1ad416bdc89dc7e80e4ce9e55bf854b0d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Float</type>
          </param>
          <param>
            <type>typename Method</type>
          </param>
          <param>
            <type>typename Task</type>
          </param>
        </templateparamlist>
        <type><ref refid="classoneapi_1_1dal_1_1kmeans__init_1_1compute__result" kindref="compound">compute_result</ref>&lt; Task &gt;</type>
        <definition>compute_result&lt;Task&gt; oneapi::dal::kmeans_init::compute</definition>
        <argsstring>(const descriptor&lt; Float, Method, Task &gt; &amp;desc, const compute_input&lt; Task &gt; &amp;input)</argsstring>
        <name>compute</name>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans__init_1_1descriptor" kindref="compound">descriptor</ref>&lt; Float, Method, Task &gt; &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans__init_1_1compute__input" kindref="compound">compute_input</ref>&lt; Task &gt; &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Runs the computing operation for K-Means initialization. For more details, see :expr:<computeroutput>oneapi::dal::compute</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Float</parametername>
</parameternamelist>
<parameterdescription>
<para>The floating-point type that the algorithm uses for intermediate computations. Can be :expr:<computeroutput>float</computeroutput> or :expr:<computeroutput>double</computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Method</parametername>
</parameternamelist>
<parameterdescription>
<para>Tag-type that specifies an implementation of K-Means Initialization algorithm. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Task</parametername>
</parameternamelist>
<parameterdescription>
<para>Tag-type that specifies type of the problem to solve. Can be :expr:<computeroutput><ref refid="structoneapi_1_1dal_1_1kmeans__init_1_1task_1_1init" kindref="compound">task::init</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">desc</parametername>
</parameternamelist>
<parameterdescription>
<para>The descriptor of the algorithm </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data for the computing operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result The result of the computing operation</para>
</simplesect>
<simplesect kind="pre"><para>:expr:<computeroutput>input.data.has_data == true</computeroutput> </para>
</simplesect>
<simplesect kind="pre"><para>:expr:<computeroutput>input.data.row_count == desc.cluster_count</computeroutput> </para>
</simplesect>
<simplesect kind="post"><para>:expr:<computeroutput>result.centroids.has_data == true</computeroutput> </para>
</simplesect>
<simplesect kind="post"><para>:expr:<computeroutput>result.centroids.row_count == desc.cluster_count</computeroutput> </para>
</simplesect>
<simplesect kind="post"><para>:expr:<computeroutput>result.centroids.column_count == input.data.column_count</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/kmeans_init.hpp" line="99" column="16" declfile="include/oneapi/dal/algo/kmeans_init.hpp" declline="99" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/oneapi/dal/algo/kmeans_init.hpp" line="4" column="34"/>
  </compounddef>
</doxygen>
