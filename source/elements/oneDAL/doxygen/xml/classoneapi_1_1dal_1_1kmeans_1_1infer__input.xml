<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classoneapi_1_1dal_1_1kmeans_1_1infer__input" kind="class" language="C++" prot="public">
    <compoundname>oneapi::dal::kmeans::infer_input</compoundname>
    <includes refid="kmeans_8hpp" local="no">kmeans.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Task</type>
        <defval><ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1clustering" kindref="compound">task::by_default</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1acee3e7f57bbf0eb5182d3ad56ff363c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>infer_input</definition>
        <argsstring>(const model&lt; Task &gt; &amp;m=model&lt; Task &gt;{}, const table &amp;data=table{})</argsstring>
        <name>infer_input</name>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1model" kindref="compound">model</ref>&lt; Task &gt; &amp;</type>
          <declname>m</declname>
          <defval><ref refid="classoneapi_1_1dal_1_1kmeans_1_1model" kindref="compound">model</ref>&lt; Task &gt;{}</defval>
        </param>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1table" kindref="compound">table</ref> &amp;</type>
          <declname>data</declname>
          <defval><ref refid="classoneapi_1_1dal_1_1table" kindref="compound">table</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new instance of the class with the given :literal:<computeroutput>model</computeroutput> and :literal:<computeroutput>data</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/kmeans.hpp" line="164" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1a496e356753d8a11678ab227af49dc3cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1model" kindref="compound">model</ref>&lt; Task &gt; &amp;</type>
        <definition>const model&lt;Task&gt;&amp; get_model</definition>
        <argsstring>() const</argsstring>
        <name>get_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An $n \times p$ table with the data to be assigned to the clusters, where each row stores one feature vector. <simplesect kind="remark"><para>default = model&lt;Task&gt;{} </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/kmeans.hpp" line="170" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1a5b9fa61cd3b67dacd88a6402dc7f55f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classoneapi_1_1dal_1_1kmeans_1_1infer__input" kindref="compound">infer_input</ref> &amp;</type>
        <definition>infer_input&amp; set_model</definition>
        <argsstring>(const model&lt; Task &gt; &amp;)</argsstring>
        <name>set_model</name>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1kmeans_1_1model" kindref="compound">model</ref>&lt; Task &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/kmeans.hpp" line="171" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1a8084b2fd7da5fd507077b6da7fbdbe30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classoneapi_1_1dal_1_1table" kindref="compound">table</ref> &amp;</type>
        <definition>const table&amp; get_data</definition>
        <argsstring>() const</argsstring>
        <name>get_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The trained K-Means model <simplesect kind="remark"><para>default = table{} </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/kmeans.hpp" line="175" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1a2a40415ce953042cee491ef3d91f7b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classoneapi_1_1dal_1_1kmeans_1_1infer__input" kindref="compound">infer_input</ref> &amp;</type>
        <definition>infer_input&amp; set_data</definition>
        <argsstring>(const table &amp;)</argsstring>
        <name>set_data</name>
        <param>
          <type>const <ref refid="classoneapi_1_1dal_1_1table" kindref="compound">table</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/oneapi/dal/algo/kmeans.hpp" line="176" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Task</parametername>
</parameternamelist>
<parameterdescription>
<para>Tag-type that specifies type of the problem to solve. Can be :expr:<computeroutput><ref refid="structoneapi_1_1dal_1_1kmeans_1_1task_1_1clustering" kindref="compound">task::clustering</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/oneapi/dal/algo/kmeans.hpp" line="160" column="18" bodyfile="include/oneapi/dal/algo/kmeans.hpp" bodystart="160" bodyend="177"/>
    <listofallmembers>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1a8084b2fd7da5fd507077b6da7fbdbe30" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::infer_input</scope><name>get_data</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1a496e356753d8a11678ab227af49dc3cb" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::infer_input</scope><name>get_model</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1acee3e7f57bbf0eb5182d3ad56ff363c0" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::infer_input</scope><name>infer_input</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1a2a40415ce953042cee491ef3d91f7b0b" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::infer_input</scope><name>set_data</name></member>
      <member refid="classoneapi_1_1dal_1_1kmeans_1_1infer__input_1a5b9fa61cd3b67dacd88a6402dc7f55f6" prot="public" virt="non-virtual"><scope>oneapi::dal::kmeans::infer_input</scope><name>set_model</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
