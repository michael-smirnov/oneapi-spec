<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvplm_1_1variant" kind="class" language="C++" prot="public">
    <compoundname>vplm::variant</compoundname>
    <basecompoundref refid="classvplm_1_1wrapper" prot="public" virt="non-virtual">vplm::wrapper&lt; vplm_variant &gt;</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvplm_1_1variant_1a9e6f9c0b959fa7d6b95e58ed921f25ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::variant</definition>
        <argsstring>(vplm_variant v)</argsstring>
        <name>variant</name>
        <param>
          <type><ref refid="structvplm__variant" kindref="compound">vplm_variant</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="86" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1aeb46f9d960bd8aaf5389ef070e4dec08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::variant</definition>
        <argsstring>(int32_t v)</argsstring>
        <name>variant</name>
        <param>
          <type>int32_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="91" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a095f1ed22a6f90939d02a7629a74fd3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::variant</definition>
        <argsstring>(int64_t v)</argsstring>
        <name>variant</name>
        <param>
          <type>int64_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="97" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1ac0722792806cc7203c2077a54abd079a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::variant</definition>
        <argsstring>(double v)</argsstring>
        <name>variant</name>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="103" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a416be6e06cf41e0b2e1932bf7e8dfcd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::variant</definition>
        <argsstring>(vplm_size v)</argsstring>
        <name>variant</name>
        <param>
          <type><ref refid="structvplm__size" kindref="compound">vplm_size</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="109" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a8cb648fe14f437d7004aa3b10cb98568" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::variant</definition>
        <argsstring>(vplm_rect v)</argsstring>
        <name>variant</name>
        <param>
          <type><ref refid="structvplm__rect" kindref="compound">vplm_rect</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="115" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1af442cd4da774948a7d591e97c73671d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vplm::variant::variant</definition>
        <argsstring>(T *v)</argsstring>
        <name>variant</name>
        <param>
          <type>T *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="122" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a2653f457e95867d0c448b336e70381b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vplm::variant::variant</definition>
        <argsstring>(T v)</argsstring>
        <name>variant</name>
        <param>
          <type>T</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="129" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a80fc304907c101bdfab5d4ef96ed3083" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::operator int32_t</definition>
        <argsstring>()</argsstring>
        <name>operator int32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="136" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a6a470ebdf28ee3d84b3876d796a4b8d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::operator int64_t</definition>
        <argsstring>()</argsstring>
        <name>operator int64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="142" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="142" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a8fbedc9b0c9157432e89857f9d36ce35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::operator double</definition>
        <argsstring>()</argsstring>
        <name>operator double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="149" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="149" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1ae61ff6ad06b59fe0d95dd991e5546138" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::operator vplm_size</definition>
        <argsstring>()</argsstring>
        <name>operator vplm_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="156" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a039e208a67fa1120e137edb3e97a3864" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::variant::operator vplm_rect</definition>
        <argsstring>()</argsstring>
        <name>operator vplm_rect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="162" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a65c416b2782f2e7ddd0dbb95b5d9ee30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vplm::variant::operator T*</definition>
        <argsstring>()</argsstring>
        <name>operator T*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="169" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="169" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1variant_1a09d319725aed72c2efa8ff14f09df7a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>vplm::variant::operator T</definition>
        <argsstring>()</argsstring>
        <name>operator T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm++.h" line="177" column="5" bodyfile="include/vplmemory/vplm++.h" bodystart="177" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>vplm::wrapper&lt; vplm_variant &gt;</label>
        <link refid="classvplm_1_1wrapper"/>
      </node>
      <node id="1">
        <label>vplm::variant</label>
        <link refid="classvplm_1_1variant"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>vplm_size</label>
        <link refid="structvplm__size"/>
      </node>
      <node id="3">
        <label>vplm_variant</label>
        <link refid="structvplm__variant"/>
        <childnode refid="4" relation="usage">
          <edgelabel>size</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>rect</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>vplm_rect</label>
        <link refid="structvplm__rect"/>
      </node>
      <node id="2">
        <label>vplm::wrapper&lt; vplm_variant &gt;</label>
        <link refid="classvplm_1_1wrapper"/>
        <childnode refid="3" relation="usage">
          <edgelabel>object_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>vplm::variant</label>
        <link refid="classvplm_1_1variant"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/vplmemory/vplm++.h" line="84" column="1" bodyfile="include/vplmemory/vplm++.h" bodystart="83" bodyend="183"/>
    <listofallmembers>
      <member refid="classvplm_1_1wrapper_1a798603677edb68f06e196db09281a68f" prot="protected" virt="non-virtual"><scope>vplm::variant</scope><name>object_</name></member>
      <member refid="classvplm_1_1variant_1a8fbedc9b0c9157432e89857f9d36ce35" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator double</name></member>
      <member refid="classvplm_1_1variant_1a80fc304907c101bdfab5d4ef96ed3083" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator int32_t</name></member>
      <member refid="classvplm_1_1variant_1a6a470ebdf28ee3d84b3876d796a4b8d5" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator int64_t</name></member>
      <member refid="classvplm_1_1variant_1a09d319725aed72c2efa8ff14f09df7a2" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator T</name></member>
      <member refid="classvplm_1_1variant_1a65c416b2782f2e7ddd0dbb95b5d9ee30" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator T*</name></member>
      <member refid="classvplm_1_1variant_1a039e208a67fa1120e137edb3e97a3864" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator vplm_rect</name></member>
      <member refid="classvplm_1_1variant_1ae61ff6ad06b59fe0d95dd991e5546138" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator vplm_size</name></member>
      <member refid="classvplm_1_1wrapper_1ada0f50315cdc634c0114894f0eec844b" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator&amp;</name></member>
      <member refid="classvplm_1_1wrapper_1a7da3f4d86ddf6351e22724e7b12d31d6" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator&amp;</name></member>
      <member refid="classvplm_1_1wrapper_1a2da9a1c3ac7046862b28e00f1f37653a" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator()</name></member>
      <member refid="classvplm_1_1wrapper_1a6603d37b01bf19621f49803136f575fd" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator()</name></member>
      <member refid="classvplm_1_1wrapper_1ae9a073fb0ba546a1c00dddd84c46d48b" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>operator=</name></member>
      <member refid="classvplm_1_1variant_1a9e6f9c0b959fa7d6b95e58ed921f25ea" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>variant</name></member>
      <member refid="classvplm_1_1variant_1aeb46f9d960bd8aaf5389ef070e4dec08" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>variant</name></member>
      <member refid="classvplm_1_1variant_1a095f1ed22a6f90939d02a7629a74fd3b" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>variant</name></member>
      <member refid="classvplm_1_1variant_1ac0722792806cc7203c2077a54abd079a" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>variant</name></member>
      <member refid="classvplm_1_1variant_1a416be6e06cf41e0b2e1932bf7e8dfcd2" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>variant</name></member>
      <member refid="classvplm_1_1variant_1a8cb648fe14f437d7004aa3b10cb98568" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>variant</name></member>
      <member refid="classvplm_1_1variant_1af442cd4da774948a7d591e97c73671d8" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>variant</name></member>
      <member refid="classvplm_1_1variant_1a2653f457e95867d0c448b336e70381b1" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>variant</name></member>
      <member refid="classvplm_1_1wrapper_1a8ad143ad41c6f7c49ac60d61f67a39a5" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>wrapper</name></member>
      <member refid="classvplm_1_1wrapper_1a3de834fb4d08f1c99f7653b38e70eb63" prot="public" virt="non-virtual"><scope>vplm::variant</scope><name>wrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
