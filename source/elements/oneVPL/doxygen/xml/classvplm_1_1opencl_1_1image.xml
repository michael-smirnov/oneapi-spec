<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classvplm_1_1opencl_1_1image" kind="class" language="C++" prot="public">
    <compoundname>vplm::opencl::image</compoundname>
    <basecompoundref refid="classvplm_1_1cl__image" prot="public" virt="non-virtual">vplm::cl_image</basecompoundref>
    <includes refid="vplm__opencl_09_09_8h" local="no">vplm_opencl++.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvplm_1_1opencl_1_1image_1aed2f2262cc1af0bada228be1cdea7b3c" prot="private" static="no" mutable="no">
        <type><ref refid="classvplm_1_1opencl_1_1memory" kindref="compound">vplm::opencl::memory</ref></type>
        <definition>vplm::opencl::memory vplm::opencl::image::memory_</definition>
        <argsstring></argsstring>
        <name>memory_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm_opencl++.h" line="140" column="26" bodyfile="include/vplmemory/vplm_opencl++.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvplm_1_1opencl_1_1image_1aa80fb6bc276dde0177ca277ff28e9512" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::opencl::image::image</definition>
        <argsstring>(cl_command_queue queue, const vplm::memory &amp;mem)</argsstring>
        <name>image</name>
        <param>
          <type>cl_command_queue</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>const <ref refid="classvplm_1_1memory" kindref="compound">vplm::memory</ref> &amp;</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm_opencl++.h" line="124" column="5" bodyfile="include/vplmemory/vplm_opencl++.h" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classvplm_1_1opencl_1_1image_1adfb8b4f313a9a6506dd8a2d586edd9f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>vplm::opencl::image::~image</definition>
        <argsstring>()</argsstring>
        <name>~image</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vplmemory/vplm_opencl++.h" line="134" column="5" bodyfile="include/vplmemory/vplm_opencl++.h" bodystart="134" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>OpenCL image accessor. </para>
    </briefdescription>
    <detaileddescription>
<para>Helper class which gets access to the memory object as OpenCL image in constructor and releases access in destructor. Example:</para>
<para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;vplmemory/vplm++.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;vplmemory/vplm_opencl++.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">vplm::memory<sp/>mem<sp/>=<sp/>get_from_somewhere();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vplm::opencl::image<sp/>image(mem,<sp/>VPLM_ACCESS_MODE_READ);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;&gt;&gt;&gt;<sp/>first<sp/>plane<sp/>cl_mem:<sp/>%p\n&quot;,<sp/>image[0]);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>vplm::opencl::image</label>
        <link refid="classvplm_1_1opencl_1_1image"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vplm::cl_image</label>
        <link refid="classvplm_1_1cl__image"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vplm::wrapper&lt; vplm_cl_image &gt;</label>
        <link refid="classvplm_1_1wrapper"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>_vplm_vtable</label>
        <link refid="struct__vplm__vtable"/>
        <childnode refid="6" relation="usage">
          <edgelabel>va</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>cl</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>vplm::opencl::image</label>
        <link refid="classvplm_1_1opencl_1_1image"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>vplm::cl_image</label>
        <link refid="classvplm_1_1cl__image"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>_vplm_va_vtable</label>
        <link refid="struct__vplm__va__vtable"/>
      </node>
      <node id="4">
        <label>vplm_cl_image</label>
        <link refid="structvplm__cl__image"/>
        <childnode refid="5" relation="usage">
          <edgelabel>memory</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>vplm::wrapper&lt; vplm_cl_image &gt;</label>
        <link refid="classvplm_1_1wrapper"/>
        <childnode refid="4" relation="usage">
          <edgelabel>object_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>_vplm_cl_vtable</label>
        <link refid="struct__vplm__cl__vtable"/>
      </node>
    </collaborationgraph>
    <location file="include/vplmemory/vplm_opencl++.h" line="122" column="1" bodyfile="include/vplmemory/vplm_opencl++.h" bodystart="121" bodyend="141"/>
    <listofallmembers>
      <member refid="classvplm_1_1opencl_1_1image_1aa80fb6bc276dde0177ca277ff28e9512" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>image</name></member>
      <member refid="classvplm_1_1cl__image_1aca99c023879176186a3199e73a51770c" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>mem</name></member>
      <member refid="classvplm_1_1opencl_1_1image_1aed2f2262cc1af0bada228be1cdea7b3c" prot="private" virt="non-virtual"><scope>vplm::opencl::image</scope><name>memory_</name></member>
      <member refid="classvplm_1_1wrapper_1a798603677edb68f06e196db09281a68f" prot="protected" virt="non-virtual"><scope>vplm::opencl::image</scope><name>object_</name></member>
      <member refid="classvplm_1_1wrapper_1ada0f50315cdc634c0114894f0eec844b" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>operator&amp;</name></member>
      <member refid="classvplm_1_1wrapper_1a7da3f4d86ddf6351e22724e7b12d31d6" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>operator&amp;</name></member>
      <member refid="classvplm_1_1wrapper_1a2da9a1c3ac7046862b28e00f1f37653a" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>operator()</name></member>
      <member refid="classvplm_1_1wrapper_1a6603d37b01bf19621f49803136f575fd" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>operator()</name></member>
      <member refid="classvplm_1_1wrapper_1ae9a073fb0ba546a1c00dddd84c46d48b" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>operator=</name></member>
      <member refid="classvplm_1_1cl__image_1a187e43c158d0b24aa803d654e937b8d3" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>operator[]</name></member>
      <member refid="classvplm_1_1wrapper_1a8ad143ad41c6f7c49ac60d61f67a39a5" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>wrapper</name></member>
      <member refid="classvplm_1_1wrapper_1a3de834fb4d08f1c99f7653b38e70eb63" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>wrapper</name></member>
      <member refid="classvplm_1_1opencl_1_1image_1adfb8b4f313a9a6506dd8a2d586edd9f6" prot="public" virt="non-virtual"><scope>vplm::opencl::image</scope><name>~image</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
