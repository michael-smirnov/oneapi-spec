<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="vpl__utils_8h" kind="file" language="C++">
    <compoundname>vpl_utils.h</compoundname>
    <includes local="yes">vpl_export.h</includes>
    <includes refid="vpl__video_8h" local="yes">vpl_video.h</includes>
    <includedby refid="vpl_8hpp" local="yes">include/vpl/vpl.hpp</includedby>
    <includedby refid="vpl__device_8hpp" local="yes">include/vpl/vpl_device.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>vpl_video.h</label>
        <link refid="vpl__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>vpl_config.hpp</label>
        <link refid="vpl__config_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdexcept</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="1">
        <label>include/vpl/vpl_utils.h</label>
        <link refid="vpl__utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vpl/vpl.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>uchar.h</label>
      </node>
      <node id="13">
        <label>vpl/vpl_export.h</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="7">
        <label>vplmemory/vplm.h</label>
        <link refid="vplm_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vpl_device.hpp</label>
        <link refid="vpl__device_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vpl_types.h</label>
        <link refid="vpl__types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>vpl_export.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>include/vpl/vpl_video.h</label>
        <link refid="vpl__video_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/vpl/vpl.hpp</label>
        <link refid="vpl_8hpp"/>
      </node>
      <node id="4">
        <label>include/vpl/vpl_context.hpp</label>
        <link refid="vpl__context_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/vpl/vpl_utils.h</label>
        <link refid="vpl__utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/vpl/vpl_device.hpp</label>
        <link refid="vpl__device_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" prot="public" static="no">
        <type>struct <ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref></type>
        <definition>typedef struct VplFile VplFile</definition>
        <argsstring></argsstring>
        <name>VplFile</name>
        <briefdescription>
<para>file handle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vpl/vpl_utils.h" line="1" column="0" bodyfile="include/vpl/vpl_utils.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vpl__utils_8h_1ad8bcb2b373cb25906764e9d5a0cd9797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref> *</type>
        <definition>VplFile* vplOpenFile</definition>
        <argsstring>(const char *filename, const char *mode)</argsstring>
        <name>vplOpenFile</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Open a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vpl/vpl_utils.h" line="25" column="10" declfile="include/vpl/vpl_utils.h" declline="25" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="vpl__utils_8h_1abb83b3a0a65510bd79b3b7870f8b288c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vpl__types_8h_1a5a3c6f0ffa1f41bddf03a11b44636c4e" kindref="member">vplStatus</ref></type>
        <definition>vplStatus vplCloseFile</definition>
        <argsstring>(VplFile *fFile)</argsstring>
        <name>vplCloseFile</name>
        <param>
          <type><ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref> *</type>
          <declname>fFile</declname>
        </param>
        <briefdescription>
<para>Close a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vpl/vpl_utils.h" line="28" column="12" declfile="include/vpl/vpl_utils.h" declline="28" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vpl__utils_8h_1a7d9c650b08fc1e4d4ebdff905ce97c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vpl__types_8h_1a5a3c6f0ffa1f41bddf03a11b44636c4e" kindref="member">vplStatus</ref></type>
        <definition>vplStatus vplWriteData</definition>
        <argsstring>(VplFile *fOutput, vplm_mem *mem)</argsstring>
        <name>vplWriteData</name>
        <param>
          <type><ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref> *</type>
          <declname>fOutput</declname>
        </param>
        <param>
          <type><ref refid="struct__vplm__vtable" kindref="compound">vplm_mem</ref> *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
<para>write a vplm_mem* image to file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vpl/vpl_utils.h" line="31" column="12" declfile="include/vpl/vpl_utils.h" declline="31" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="vpl__utils_8h_1a97661a3556df50f0fb06b7917b506210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vpl__types_8h_1a5a3c6f0ffa1f41bddf03a11b44636c4e" kindref="member">vplStatus</ref></type>
        <definition>vplStatus vplReadData</definition>
        <argsstring>(VplFile *fInput, vplm_mem *mem)</argsstring>
        <name>vplReadData</name>
        <param>
          <type><ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref> *</type>
          <declname>fInput</declname>
        </param>
        <param>
          <type><ref refid="struct__vplm__vtable" kindref="compound">vplm_mem</ref> *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
<para>read a vplm_mem* image from file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/vpl/vpl_utils.h" line="34" column="12" declfile="include/vpl/vpl_utils.h" declline="34" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility functions for file I/O. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*############################################################################</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>#<sp/>Copyright<sp/>(C)<sp/>2019<sp/>Intel<sp/>Corporation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>#</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>#<sp/>SPDX-License-Identifier:<sp/>MIT</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>############################################################################*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>VPL_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VPL_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vpl_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vpl__video_8h" kindref="compound">vpl_video.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref><sp/><ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">VPL_EXPORT<sp/><ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref>*<sp/><ref refid="vpl__utils_8h_1ad8bcb2b373cb25906764e9d5a0cd9797" kindref="member">vplOpenFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mode);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">VPL_EXPORT<sp/><ref refid="vpl__types_8h_1a5a3c6f0ffa1f41bddf03a11b44636c4e" kindref="member">vplStatus</ref><sp/><ref refid="vpl__utils_8h_1abb83b3a0a65510bd79b3b7870f8b288c" kindref="member">vplCloseFile</ref>(<ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref>*<sp/>fFile);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">VPL_EXPORT<sp/><ref refid="vpl__types_8h_1a5a3c6f0ffa1f41bddf03a11b44636c4e" kindref="member">vplStatus</ref><sp/><ref refid="vpl__utils_8h_1a7d9c650b08fc1e4d4ebdff905ce97c0d" kindref="member">vplWriteData</ref>(<ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref>*<sp/>fOutput,<sp/><ref refid="struct__vplm__vtable" kindref="compound">vplm_mem</ref>*<sp/>mem);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">VPL_EXPORT<sp/><ref refid="vpl__types_8h_1a5a3c6f0ffa1f41bddf03a11b44636c4e" kindref="member">vplStatus</ref><sp/><ref refid="vpl__utils_8h_1a97661a3556df50f0fb06b7917b506210" kindref="member">vplReadData</ref>(<ref refid="vpl__utils_8h_1a4c42280c82a5213ffc91a116dccfb8c0" kindref="member">VplFile</ref>*<sp/>fInput,<sp/><ref refid="struct__vplm__vtable" kindref="compound">vplm_mem</ref>*<sp/>mem);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/vpl/vpl_utils.h"/>
  </compounddef>
</doxygen>
